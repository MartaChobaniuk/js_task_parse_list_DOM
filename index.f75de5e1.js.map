{"mappings":"AAAA;AAEA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAC/C,MAAM,YAAY,SAAS,gBAAgB,CAAC;AAC5C,MAAM,qBAAqB;OAAI;CAAU;AAEzC,SAAS,UAAU,YAAY;IAC7B,OAAO,OAAO,aAAa,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK;AACtD;AAEA,SAAS;IACP,OAAO,mBACJ,IAAI,CAAC,CAAC,GAAG,IAAM,UAAU,EAAE,OAAO,CAAC,MAAM,IAAI,UAAU,EAAE,OAAO,CAAC,MAAM,GACvE,OAAO,CAAC,CAAC,WAAa,gBAAgB,MAAM,CAAC;AAClD;AAEA,SAAS;IACP,OAAO,mBAAmB,GAAG,CAAC,CAAC,WAAc,CAAA;YAC3C,MAAM,SAAS,SAAS;YACxB,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,SAAS,OAAO,CAAC,MAAM;YAC/B,KAAK,SAAS,OAAO,CAAC,GAAG;QAC3B,CAAA;AACF;AAEA;AACA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\nconst employees = document.querySelectorAll('li');\nconst newListOfEmployees = [...employees];\n\nfunction getSalary(salaryString) {\n  return Number(salaryString.slice(1).replaceAll(',', ''));\n}\n\nfunction sortList() {\n  return newListOfEmployees\n    .sort((a, b) => getSalary(b.dataset.salary) - getSalary(a.dataset.salary))\n    .forEach((employee) => listOfEmployees.append(employee));\n}\n\nfunction getEmployees() {\n  return newListOfEmployees.map((employee) => ({\n    name: employee.innerText,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\nsortList();\ngetEmployees();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}